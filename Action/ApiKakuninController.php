<?php
require PREFIX . '/Define/stdafx.php';
/**
 * コントローラー テンプレート
 *
 * @package        
 * @author         
 * @copyright      
 * @version :
 */
class ApiKakuninController extends ActionBase
{
    
    /**
     * コンストラクタ
     *
     *
     * @package 
     * @author 
     * @copyright 
     * @version:
     */
    function __construct($cli = null)
    {
        //--------------------------------------------------------------------------
        // スーパークラスのコンストラクタ 第2引数はcli用
        //--------------------------------------------------------------------------
        parent::__construct(get_class($this), $cli);

        //--------------------------------------------------------------------------
        // 代理店管理画面はIDが1とかアカウントが無いものはログイン状態をはく奪する。
        //--------------------------------------------------------------------------
        /*
        if($_SESSION["is_auth"] && (int)$_SESSION["LOGIN"]["company_information_id"] < 2){
            $_SESSION["is_auth"]=false;
            unset($_SESSION["LOGIN"]);
        }

        //--------------------------------------------------------------------------
        // ログイン状態では無いなら転送を実施
        //--------------------------------------------------------------------------
        $this->login_checkback();
        */
        //--------------------------------------------------------------------------
        // 入力チェック 書き方は input_check.txtを参照
        //--------------------------------------------------------------------------
        $this->ChkParam = array(
            ### INPUT_CHECK ###
        );

        //--------------------------------------------------------------------------
        // 入力チェック。ここでハンドリングするので変数で管理
        //--------------------------------------------------------------------------
        $input=$this->MakearyAvtionChk($this->request);

        //--------------------------------------------------------------------------
        // resultにエラーやヴァリテーションバックがないかどうかチェック
        //--------------------------------------------------------------------------
        if($input["result"]=="PARAM_ERROR"){
            $this->action_debug('◆ パラメーターエラー', $input["result"]);
            $this->SmartyRader($this->ActionName, PARAM_ERROR);
            exit;
        }

        //--------------------------------------------------------------------------
        // Logicクラスをインスタンスする。コンストラクタにてアクション名を引継ぐ。
        //--------------------------------------------------------------------------
        $BL_Name       = 'BL_' . $this->ActionName;
        $BissinesLogic = new $BL_Name($this->ActionName);

        //--------------------------------------------------------------------------
        // INPUTはそろっているので、ここでどのイベントをおこすか決める
        // ※メソッド名は任意でよい。ただし、コンストラクタにはしない事!!!
        //--------------------------------------------------------------------------
        $Data = $BissinesLogic->execute($input);

        //--------------------------------------------------------------------------
        // 出力結果配列をログに表示
        //--------------------------------------------------------------------------
        if(php_sapi_name()!='cli') 
            $this->action_debug('$Data=>', $Data);

        //--------------------------------------------------------------------------
        //勿論JSON出力の場合もあるので、AcrionBase配下に作成する
        //--------------------------------------------------------------------------
        $this->SmartyRader($this->ActionName, $Data);
        //$this->AjaxRader($Data);
        exit;
    }

    function __destruct()
    {
        //--------------------------------------------------------------------------
        // スーパークラスのデクトラクタ
        //--------------------------------------------------------------------------
        parent::__destruct();
    }
}
